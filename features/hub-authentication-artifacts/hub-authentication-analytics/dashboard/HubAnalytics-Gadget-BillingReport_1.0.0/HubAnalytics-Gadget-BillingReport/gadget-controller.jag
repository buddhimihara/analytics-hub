<%
/**
 *  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 *
 */
(function () {
    include("../HubAnalytics-Gadget-Commons/constants.jag");
    include("../HubAnalytics-Gadget-Commons/controller-util.jag");

    var log = new Log();
    response.contentType = 'application/json';

    var FILE_NAME = FILE_NAMES.BILLING_REPORT;

    var action = request.getParameter("action");
    var filter = request.getParameter("filter");
    var data = request.getContent();

    var loggedInUser = getLoggedInUser();

    if(data != null) {
        var providerConf = data[PROVIDER_CONF];
    }

    if (action === "getLoggedInUser") {
        var jsonUser = {"LoggedInUser": loggedInUser};
        print(jsonUser);
        return;
    }

    if (action === 'getSchema') {
        var providerAPI = require('js/core/' + providerConf[PROVIDER_NAME] + '-provider-api.js');
        print(providerAPI.getSchema(providerConf));
        return;

    } else if (action === 'getData') {
        var providerAPI = require('js/core/' + providerConf[PROVIDER_NAME] + '-provider-api.js');

        var serviceProvider = "";
        if (loggedInUser.isServiceProvider) {
            serviceProvider = loggedInUser.username;
        }

        providerConf.query = "";
        var all = true;
        if (providerConf[PROVIDER_NAME] == BATCH) {

            if(loggedInUser.isOperatorAdmin) {
                providerConf.query += " AND operatorName:" + loggedInUser.operatorNameInProfile;

            } else {
                if (data.operatorName != "all" && data.operatorName != undefined) {
                    providerConf.query += " AND operatorName:" + data.operatorName;
                }
            }

            if (data.serviceProvider != "0" && data.serviceProvider != undefined) {
                providerConf.query += " AND serviceProviderId:" + "\"" + data.serviceProvider + "\"";
            }

            providerConf.query += " AND direction:" + "\""+ "sb" + "\"";

        } else if (providerConf[PROVIDER_NAME] == TYPE.OPERATOR) {
            if (data.operatorName != "all" && data.operatorName != undefined) {
                providerConf.query += "operatorName:" + "(" + data.operatorName + ")";
                all = false;
            }

        } else if (providerConf[PROVIDER_NAME] == TYPE.SP) {
            if (data.serviceProvider != "0" && data.operatorName != undefined) {
                if(data.operatorName != "all")  {
                    providerConf.query += "serviceProviderId:" + "(" + data.serviceProvider + ")" +" AND operatorName:" + "(" + data.operatorName + ")";
                } else  {
                    providerConf.query += "serviceProviderId:" + "(" + data.serviceProvider + ")";
                }
                all = false;
            } else {
                if (loggedInUser.isOperatorAdmin) {
                    providerConf.query += "operatorName:" + "(" + data.operatorName + ")";
                }
            }
        }

        var andSign = '';
        if ((!(loggedInUser.isAdmin) && all == false) || (providerConf[PROVIDER_NAME] == BATCH)) {
            andSign = ' AND ';
        }

        if (loggedInUser.isServiceProvider && (providerConf[PROVIDER_NAME] == TYPE.OPERATOR || providerConf[PROVIDER_NAME] == TYPE.SP)) {
            providerConf.query += andSign + ' _serviceProvider:"' + serviceProvider + '"';
            providerConf.tableName = STREAM.API_SUMMERY;
            //print(providerAPI.getData(providerConf));
            //return;

        } else if (loggedInUser.isServiceProvider && providerConf[PROVIDER_NAME] == BATCH) {
            providerConf.query += andSign + ' _serviceProvider:"' + serviceProvider + '"';

        } else if (loggedInUser.isPublisher && (providerConf[PROVIDER_NAME] == TYPE.OPERATOR || providerConf[PROVIDER_NAME] == BATCH)) {
            providerConf.query += andSign + ' _serviceProvider:"' + serviceProvider + '"';
        }
        print(providerAPI.getData(providerConf));

        log.info("Table ==> " + providerConf.tableName);
        log.info("query ==> " + providerConf.query);
        return;
    }

    else if (loggedInUser != null) {


        if (loggedInUser.hasNoRole) {
            print({'message': 'Not Allowed!'});
            return;
        }

        if (action == "generateCSV") {

            var userReportDirectory = "/reports/billing/csv/";
            var directory = "repository/deployment/server/jaggeryapps/portal" + userReportDirectory;
            var reportPrefix = loggedInUser.username.replace("@carbon.super","") + FILE_NAME + "-"+ data.month;

            var carbon = require('carbon');
            removeAllFiles(userReportDirectory, reportPrefix);
            var service = carbon.server.osgiService('org.wso2telco.analytics.hub.report.engine.ReportEngineService');

            var reportMaxLength = 10;

            var providerConf = data[PROVIDER_CONF];
            var providerAPI = require('js/core/' + providerConf[PROVIDER_NAME] + '-provider-api.js');

            var jagConf = require('jagConf.json');
            var tableName = jagConf["tableList"]["billing-summery"];
            var reportColumns = stringify( jagConf[jagConf["reportNames"]["billing"]] );

            providerConf.query = "year:"+ data.year;
            providerConf.query += " AND month:"+ getMonth(data.month);

            if(loggedInUser.isOperatorAdmin) {
                providerConf.query += " AND operatorName:" + loggedInUser.operatorNameInProfile;
            } else {
                    if (data.operatorName != "all" && data.operatorName != undefined && !(loggedInUser.isServiceProvider)) {
                        if(!(loggedInUser.isAdmin && data.direction == 'nb')) {
                            providerConf.query += " AND operatorName:" + data.operatorName;
                        }
                    }
            }

            if (loggedInUser.isServiceProvider) {
                serviceProvider = loggedInUser.username;
                providerConf.query += " AND serviceProvider:" + "\"" + serviceProvider + "\"";
                providerConf.query += " AND direction:" + "\""+ "nb" + "\"";
            } else {
                if (data.serviceProvider != "0" && data.serviceProvider != undefined) {
                    providerConf.query += " AND serviceProvider:" + "\"" + data.serviceProvider + "\"";
                }
                if (loggedInUser.isAdmin) {
                    providerConf.query += " AND direction:" + "\""+ data.direction + "\"";
                } else {
                    providerConf.query += " AND direction:" + "\""+ "sb" + "\"";
                }

            }

            log.info("Table ==> " + providerConf.tableName);
            log.info("query ==> " + providerConf.query);

            var reportName = directory + loggedInUser.username.replace("@carbon.super","") + FILE_NAMES.BILLING_REPORT  + data.month + "-"+data.year;
            var reportType = "billingCSV";
            service.generateReport(tableName, providerConf.query, reportName, reportMaxLength, reportType, reportColumns, null, null, null);
            print({'message': 'Report is generating'});

            return;

        } else if (action == "generateErrorCSV") {
            log.info(providerConf.query);

            var userReportDirectory = "/reports/billing/csv/";
            var directory = "repository/deployment/server/jaggeryapps/portal" + userReportDirectory;
            var reportPrefix = loggedInUser.username.replace("@carbon.super","") + FILE_NAME + "-error-"+ data.month;

            var carbon = require('carbon');
            removeAllFiles(userReportDirectory, reportPrefix);
            var service = carbon.server.osgiService('org.wso2telco.analytics.hub.report.engine.ReportEngineService');

            var reportMaxLength = 10;

            var providerConf = data[PROVIDER_CONF];
            var providerAPI = require('js/core/' + providerConf[PROVIDER_NAME] + '-provider-api.js');

            var jagConf = require('jagConf.json');
            var tableName = jagConf["tableList"]["billing-summery"];
            var reportColumns = stringify( jagConf[jagConf["reportNames"]["billing-error"]] );

            providerConf.query = "status : 1 AND year:"+ data.year;
            providerConf.query += " AND month:"+ getMonth(data.month);

            if(loggedInUser.isOperatorAdmin) {
                providerConf.query += " AND operatorName:" + loggedInUser.operatorNameInProfile;
            } else {
                if (data.operatorName != "all" && data.operatorName != undefined && !(loggedInUser.isServiceProvider)) {
                    if(!(loggedInUser.isAdmin && data.direction == 'nb')) {
                        providerConf.query += " AND operatorName:" + data.operatorName;
                    }
                }
            }

            if (loggedInUser.isServiceProvider) {
                serviceProvider = loggedInUser.username;
                providerConf.query += " AND serviceProvider:" + "\"" + serviceProvider + "\"";
                providerConf.query += " AND direction:" + "\""+ "nb" + "\"";
            } else {
                if (data.serviceProvider != "0" && data.serviceProvider != undefined) {
                    providerConf.query += " AND serviceProvider:" + "\"" + data.serviceProvider + "\"";
                }
                if (loggedInUser.isAdmin) {
                    providerConf.query += " AND direction:" + "\""+ data.direction + "\"";
                } else {
                    providerConf.query += " AND direction:" + "\""+ "sb" + "\"";
                }

            }

            log.info("Table ==> " + providerConf.tableName);
            log.info("query ==> " + providerConf.query);

            var reportName = directory + loggedInUser.username.replace("@carbon.super","") + FILE_NAMES
                            .BILLING_REPORT + "-error-" + data.month + "-"+data.year;
            var reportType = "billingErrorCSV";

            service.generateReport(tableName, providerConf.query, reportName, reportMaxLength, reportType, reportColumns, null, null, null);
            print({'message': 'Report is generating'});

            return;

        } else if(action == "generateBill") {
            var userReportDirectory = "/reports/billing/pdf/";
            var directory = "repository/deployment/server/jaggeryapps/portal" + userReportDirectory;
            var reportPrefix = loggedInUser.username.replace("@carbon.super","") + FILE_NAME + "-"+ data.month;

            var carbon = require('carbon');
            removeAllFiles(userReportDirectory, reportPrefix);
            var service = carbon.server.osgiService('org.wso2telco.analytics.hub.report.engine.ReportEngineService');
            providerConf.tableName = "WSO2TELCO_PRICING_ACCUMULATED_SUMMARY";
            var reportMaxLength = 10;

            var providerConf = data[PROVIDER_CONF];
            var providerAPI = require('js/core/' + providerConf[PROVIDER_NAME] + '-provider-api.js');
            log.info('providerConf[PROVIDER_NAME] ' + providerConf[PROVIDER_NAME]);

            var direction;
            providerConf.query = "year:"+ data.year;
            providerConf.query += " AND month:"+ getMonth(data.month);

            if(loggedInUser.isOperatorAdmin) {
                providerConf.query += " AND operatorName:" + loggedInUser.operatorNameInProfile;
            } else {
                if (data.operatorName != "all" && data.operatorName != undefined && !(loggedInUser.isServiceProvider)) {
                    providerConf.query += " AND operatorName:" + data.operatorName;
                }
            }
            if (loggedInUser.isServiceProvider) {
                serviceProvider = loggedInUser.username;
                providerConf.query += " AND serviceProvider:" + "\"" + serviceProvider + "\"";
                providerConf.query += " AND direction:" + "\""+ "nb" + "\"";
            } else {
                if (data.serviceProvider != "0" && data.serviceProvider != undefined) {
                    providerConf.query += " AND serviceProvider:" + "\"" + data.serviceProvider + "\"";
                }
                if (loggedInUser.isAdmin) {
                    providerConf.query += " AND direction:" + "\""+ data.direction + "\"";
                    direction = data.direction;
                } else {
                    providerConf.query += " AND direction:" + "\""+ "sb" + "\"";
                    direction = "sb";
                }
            }

            log.info("providerConf.query............." +  providerConf.query);

            var reportName = directory + loggedInUser.username.replace("@carbon.super","") + FILE_NAMES.BILLING_REPORT + data.month + "-"+ data.year;
            var reportType = "billingPDF";
            var billingInfo = getBillingInfo();


            service.generatePDFReport(providerConf.tableName, providerConf.query, reportName, reportMaxLength,
                    reportType, direction, data.year, data.month, loggedInUser.isServiceProvider,
                    stringify(loggedInUser), stringify(billingInfo));
            print({'message': 'Report is generating'});
            return;

        }

        else if (action == "availableCSV") {
            var userReportDirectory = "/reports/billing/csv/";
            var file = new File(userReportDirectory);
            var files = [];
            for (var i = 0; i < file.listFiles().length; i++) {
                if (!file.listFiles()[i].getName().search(loggedInUser.username.replace("@carbon.super","") + FILE_NAMES.BILLING_REPORT)) {
                    files[i] = {"name": file.listFiles()[i].getName(), "index": i};
                }
            }

            print(files);
            return;

        } else if (action == "availableErrorCSV") {
            var userReportDirectory = "/reports/billing/csv/";
            var file = new File(userReportDirectory);
            var files = [];
            for (var i = 0; i < file.listFiles().length; i++) {
                if (!file.listFiles()[i].getName().search(loggedInUser.username.replace("@carbon.super","") +
                                FILE_NAMES.BILLING_REPORT + "-error-")) {
                    files[i] = {"name": file.listFiles()[i].getName(), "index": i};
                }
            }

            print(files);
            return;

        } else if (action == "availablePDF") {
            var userReportDirectory = "/reports/billing/pdf/";
            var file = new File(userReportDirectory);
            var files = [];
            for (var i = 0; i < file.listFiles().length; i++) {
                if (!file.listFiles()[i].getName().search(loggedInUser.username.replace("@carbon.super","") + FILE_NAMES.BILLING_REPORT)) {
                    files[i] = {"name": file.listFiles()[i].getName(), "index": i};
                }
            }

            print(files);
            return;

        } else if (action == "get" && request.getParameter("index") != null) {
            var type = request.getParameter("type");
            log.info("type.................." + type);
            if (type == 'csv') {
                userReportDirectory = "/reports/billing/csv/";
            } else if(type == 'pdf') {
                userReportDirectory =  "/reports/billing/pdf/";
            }

            var file = new File(userReportDirectory).listFiles()[request.getParameter("index")];
            response.contentType = "application/octet-stream";
            response.addHeader("Content-Disposition", "attachment; filename=" + file.getName());
            print(file.getStream());

        } else if (action == "remove" && request.getParameter("index") != null) {
            var type = request.getParameter("type");
            if (type == 'csv') {
                userReportDirectory = "/reports/billing/csv/";
            } else if(type == 'pdf') {
                userReportDirectory =  "/reports/billing/pdf/";
            }
            var file = new File(userReportDirectory);
            var result = file.listFiles()[request.getParameter("index")].del();
            print({"fileDeleted": result});
            return;
        }
    }

}());


function getMonth(month){

    if (month == 'January') {
        return 1;
    } else if (month == 'February') {
        return 2;
    } else if (month == 'March') {
        return 3;
    } else if (month == 'April') {
        return 4;
    } else if (month == 'May') {
        return 5;
    } else if (month == 'June') {
        return 6;
    } else if (month == 'July') {
        return 7;
    } else if (month == 'August') {
        return 8;
    } else if (month == 'September') {
        return 9;
    } else if (month == 'October') {
        return 10;
    } else if (month == 'November') {
        return 11;
    } else if (month == 'December') {
        return 12;
    }
};

function removeAllFiles(userReportDirectory, reportPrefix1) {
    var file = new File(userReportDirectory);

    for (var i = 0; i < file.listFiles().length; i++) {
        if (!file.listFiles()[i].getName().search(reportPrefix1)) {
            log.info("File " + file.listFiles()[i].getName() + " deleted.");
            var result = file.listFiles()[i].del();
        }
    }
};

%>